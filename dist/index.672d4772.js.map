{"mappings":"AAAA,gCAAgC;AAChC,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,SAAS,SAAS,cAAc,CAAC;AACvC,MAAM,mBAAmB,SAAS,cAAc,CAAC;AACjD,MAAM,cAAc,SAAS,gBAAgB,CAAC;AAC9C,MAAM,cAAc,OAAO,gBAAgB,CAAC;AAC5C,MAAM,WAAW,SAAS,gBAAgB,CAAC;AAC3C,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,aAAa,SAAS,aAAa,CAAC;AAE1C,8FAA8F;AAC9F,SAAS,eAAe;IACtB,IAAI;IAEJ,SAAS,OAAO,CAAC,CAAA,UAAW;QAC1B,IAAI,QAAQ,qBAAqB,GAAG,GAAG,IAAI,GAAG;YAC5C,iBAAiB,QAAQ,YAAY,CAAC;YACtC,IACE,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAC3B,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAE3B,iBAAiB,SAAS,CAAC,MAAM,CAAC;iBAElC,iBAAiB,SAAS,CAAC,GAAG,CAAC;QAEnC,CAAC;IACH;IAEA,YAAY,OAAO,CAAC,CAAA,OAAQ;QAC1B,IAAI,KAAK,YAAY,CAAC,QAAQ,SAAS,CAAC,OAAO,gBAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;aAEnB,KAAK,SAAS,CAAC,MAAM,CAAC;IAE1B;AACF;AAEA,wDAAwD;AACxD,SAAS,sBAAsB;IAC7B,UAAU,SAAS,CAAC,MAAM,CAAC;IAC3B,IAAI,OAAO,UAAU,GAAG,KACtB,OAAO,SAAS,CAAC,MAAM,CAAC;AAE5B;AAEA,sDAAsD;AACtD,SAAS,gBAAgB;IACvB,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAEhD,IAAI,OAAO,UAAU,GAAG,KAAK;QAC3B,IAAI,cAAc,WAAW,SAAS,CAAC,QAAQ,CAAC,aAC9C,WAAW,SAAS,CAAC,MAAM,CAAC;QAE9B,IAAI,oBAAoB,iBAAiB,SAAS,CAAC,QAAQ,CAAC,WAC1D,iBAAiB,SAAS,CAAC,MAAM,CAAC;IAEtC,CAAC;AACH;AAEA,SAAS,gBAAgB,IAAI,EAAE;IAC7B,MAAM,SAAS,SAAS,aAAa,CAAC,KAAK,YAAY,CAAC;IACxD,MAAM,iBAAiB,OAAO,SAAS;IAEvC,OAAO,QAAQ,CAAC;QACd,KAAK;QACL,UAAU;IACZ;AACF;AAEA,mCAAmC;AACnC,OAAO,gBAAgB,CAAC,UAAU;AAClC,OAAO,gBAAgB,CAAC,UAAU;AAClC,UAAU,gBAAgB,CAAC,SAAS;AAEpC,YAAY,OAAO,CAAC,CAAA,OAAQ;IAC1B,KAAK,gBAAgB,CAAC,SAAS;AACjC;AAEA,WAAW,gBAAgB,CAAC,SAAS,IAAM;IACzC,MAAM,KAAK,CAAC,OAAO,GAAG;AACxB;AAEA,SAAS,gBAAgB,CAAC,SAAS,IAAM;IACvC,MAAM,KAAK,CAAC,OAAO,GAAG;AACxB;AAEA,OAAO,gBAAgB,CAAC,SAAS,CAAA,QAAS;IACxC;IACA,IAAI,MAAM,MAAM,KAAK,OACnB,MAAM,KAAK,CAAC,OAAO,GAAG;AAE1B;AAEA,YAAY,OAAO,CAAC,CAAA,OAAQ;IAC1B,KAAK,gBAAgB,CAAC,SAAS,CAAA,IAAK;QAClC,yEAAyE;QACzE,EAAE,cAAc;QAChB,gBAAgB;IAClB;AACF","sources":["script.js"],"sourcesContent":["// Sélection des éléments du DOM\nconst hamburger = document.getElementById(\"hamburger\")\nconst navbar = document.getElementById(\"navbar\")\nconst teleconsultation = document.getElementById(\"teleconsultation\")\nconst navbarItems = document.querySelectorAll(\".navbar-item\")\nconst navbarLinks = navbar.querySelectorAll(\"a\")\nconst sections = document.querySelectorAll(\"section\")\nconst modal = document.querySelector(\".modal\")\nconst closeBtn = document.querySelector(\".close\")\nconst triggerBtn = document.querySelector(\".trigger-modal\")\n\n// Fonction pour mettre à jour la classe active de la navbar en fonction de la section visible\nfunction setActiveNav() {\n  let visibleSection\n\n  sections.forEach(section => {\n    if (section.getBoundingClientRect().top <= 1) {\n      visibleSection = section.getAttribute(\"id\")\n      if (\n        section.className.includes(\"about\") ||\n        section.className.includes(\"contact\")\n      ) {\n        teleconsultation.classList.remove(\"visible\")\n      } else {\n        teleconsultation.classList.add(\"visible\")\n      }\n    }\n  })\n\n  navbarLinks.forEach(link => {\n    if (link.getAttribute(\"href\").substring(1) === visibleSection) {\n      link.classList.add(\"active\")\n    } else {\n      link.classList.remove(\"active\")\n    }\n  })\n}\n\n// Fonction pour gérer le comportement du menu hamburger\nfunction toggleHamburgerMenu() {\n  hamburger.classList.toggle(\"active\")\n  if (window.innerWidth < 768) {\n    navbar.classList.toggle(\"nav-open\")\n  }\n}\n\n// Fonction pour gérer le redimensionnement de l'écran\nfunction removeNavOpen() {\n  const navElement = document.querySelector(\".nav-open\")\n  const hamburgerElement = document.querySelector(\"#hamburger\")\n\n  if (window.innerWidth > 768) {\n    if (navElement && navElement.classList.contains(\"nav-open\")) {\n      navElement.classList.remove(\"nav-open\")\n    }\n    if (hamburgerElement && hamburgerElement.classList.contains(\"active\")) {\n      hamburgerElement.classList.remove(\"active\")\n    }\n  }\n}\n\nfunction smoothScrolling(link) {\n  const target = document.querySelector(link.getAttribute(\"href\"))\n  const targetPosition = target.offsetTop\n\n  window.scrollTo({\n    top: targetPosition,\n    behavior: \"smooth\",\n  })\n}\n\n// Ajout des écouteurs d'événements\nwindow.addEventListener(\"scroll\", setActiveNav)\nwindow.addEventListener(\"resize\", removeNavOpen)\nhamburger.addEventListener(\"click\", toggleHamburgerMenu)\n\nnavbarItems.forEach(item => {\n  item.addEventListener(\"click\", toggleHamburgerMenu)\n})\n\ntriggerBtn.addEventListener(\"click\", () => {\n  modal.style.display = \"block\"\n})\n\ncloseBtn.addEventListener(\"click\", () => {\n  modal.style.display = \"none\"\n})\n\nwindow.addEventListener(\"click\", event => {\n  setActiveNav()\n  if (event.target === modal) {\n    modal.style.display = \"none\"\n  }\n})\n\nnavbarLinks.forEach(link => {\n  link.addEventListener(\"click\", e => {\n    // Empêcher le comportement par défaut du lien (ne pas recharger la page)\n    e.preventDefault()\n    smoothScrolling(link)\n  })\n})\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}