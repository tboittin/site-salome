{"mappings":"AAAA,gCAAgC;AAChC,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,SAAS,SAAS,cAAc,CAAC;AACvC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,cAAc,SAAS,gBAAgB,CAAC;AAC9C,MAAM,cAAc,OAAO,gBAAgB,CAAC;AAC5C,MAAM,WAAW,SAAS,gBAAgB,CAAC;AAC3C,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,aAAa,SAAS,aAAa,CAAC;AAE1C,8FAA8F;AAC9F,SAAS,eAAe;IACtB,IAAI;IAEJ,SAAS,OAAO,CAAC,CAAA,UAAW;QAC1B,IAAI,QAAQ,qBAAqB,GAAG,GAAG,IAAI,GAAG;YAC5C,iBAAiB,QAAQ,YAAY,CAAC;YACtC,IACE,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAC3B,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAE3B,SAAS,SAAS,CAAC,MAAM,CAAC;iBAE1B,SAAS,SAAS,CAAC,GAAG,CAAC;QAE3B,CAAC;IACH;IAEA,YAAY,OAAO,CAAC,CAAA,OAAQ;QAC1B,IAAI,KAAK,YAAY,CAAC,QAAQ,SAAS,CAAC,OAAO,gBAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;aAEnB,KAAK,SAAS,CAAC,MAAM,CAAC;IAE1B;AACF;AAEA,wDAAwD;AACxD,SAAS,sBAAsB;IAC7B,UAAU,SAAS,CAAC,MAAM,CAAC;IAC3B,IAAI,OAAO,UAAU,GAAG,KACtB,OAAO,SAAS,CAAC,MAAM,CAAC;AAE5B;AAEA,sDAAsD;AACtD,SAAS,gBAAgB;IACvB,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAEhD,IAAI,OAAO,UAAU,GAAG,KAAK;QAC3B,IAAI,cAAc,WAAW,SAAS,CAAC,QAAQ,CAAC,aAC9C,WAAW,SAAS,CAAC,MAAM,CAAC;QAE9B,IAAI,oBAAoB,iBAAiB,SAAS,CAAC,QAAQ,CAAC,WAC1D,iBAAiB,SAAS,CAAC,MAAM,CAAC;IAEtC,CAAC;AACH;AAEA,SAAS,gBAAgB,IAAI,EAAE;IAC7B,MAAM,SAAS,SAAS,aAAa,CAAC,KAAK,YAAY,CAAC;IACxD,MAAM,iBAAiB,OAAO,SAAS;IAEvC,OAAO,QAAQ,CAAC;QACd,KAAK;QACL,UAAU;IACZ;AACF;AAEA,mCAAmC;AACnC,OAAO,gBAAgB,CAAC,UAAU;AAClC,OAAO,gBAAgB,CAAC,UAAU;AAClC,UAAU,gBAAgB,CAAC,SAAS;AAEpC,YAAY,OAAO,CAAC,CAAA,OAAQ;IAC1B,KAAK,gBAAgB,CAAC,SAAS;AACjC;AAEA,WAAW,gBAAgB,CAAC,SAAS,IAAM;IACzC,MAAM,KAAK,CAAC,OAAO,GAAG;AACxB;AAEA,SAAS,gBAAgB,CAAC,SAAS,IAAM;IACvC,MAAM,KAAK,CAAC,OAAO,GAAG;AACxB;AAEA,OAAO,gBAAgB,CAAC,SAAS,CAAA,QAAS;IACxC;IACA,IAAI,MAAM,MAAM,KAAK,OACnB,MAAM,KAAK,CAAC,OAAO,GAAG;AAE1B;AAEA,YAAY,OAAO,CAAC,CAAA,OAAQ;IAC1B,KAAK,gBAAgB,CAAC,SAAS,CAAA,IAAK;QAClC,yEAAyE;QACzE,EAAE,cAAc;QAChB,gBAAgB;IAClB;AACF","sources":["script.js"],"sourcesContent":["// Sélection des éléments du DOM\r\nconst hamburger = document.getElementById(\"hamburger\")\r\nconst navbar = document.getElementById(\"navbar\")\r\nconst doctolib = document.getElementById(\"doctolib\")\r\nconst navbarItems = document.querySelectorAll(\".navbar-item\")\r\nconst navbarLinks = navbar.querySelectorAll(\"a\")\r\nconst sections = document.querySelectorAll(\"section\")\r\nconst modal = document.querySelector(\".modal\")\r\nconst closeBtn = document.querySelector(\".close\")\r\nconst triggerBtn = document.querySelector(\".trigger-modal\")\r\n\r\n// Fonction pour mettre à jour la classe active de la navbar en fonction de la section visible\r\nfunction setActiveNav() {\r\n  let visibleSection\r\n\r\n  sections.forEach(section => {\r\n    if (section.getBoundingClientRect().top <= 1) {\r\n      visibleSection = section.getAttribute(\"id\")\r\n      if (\r\n        section.className.includes(\"about\") ||\r\n        section.className.includes(\"contact\")\r\n      ) {\r\n        doctolib.classList.remove(\"visible\")\r\n      } else {\r\n        doctolib.classList.add(\"visible\")\r\n      }\r\n    }\r\n  })\r\n\r\n  navbarLinks.forEach(link => {\r\n    if (link.getAttribute(\"href\").substring(1) === visibleSection) {\r\n      link.classList.add(\"active\")\r\n    } else {\r\n      link.classList.remove(\"active\")\r\n    }\r\n  })\r\n}\r\n\r\n// Fonction pour gérer le comportement du menu hamburger\r\nfunction toggleHamburgerMenu() {\r\n  hamburger.classList.toggle(\"active\")\r\n  if (window.innerWidth < 768) {\r\n    navbar.classList.toggle(\"nav-open\")\r\n  }\r\n}\r\n\r\n// Fonction pour gérer le redimensionnement de l'écran\r\nfunction removeNavOpen() {\r\n  const navElement = document.querySelector(\".nav-open\")\r\n  const hamburgerElement = document.querySelector(\"#hamburger\")\r\n\r\n  if (window.innerWidth > 768) {\r\n    if (navElement && navElement.classList.contains(\"nav-open\")) {\r\n      navElement.classList.remove(\"nav-open\")\r\n    }\r\n    if (hamburgerElement && hamburgerElement.classList.contains(\"active\")) {\r\n      hamburgerElement.classList.remove(\"active\")\r\n    }\r\n  }\r\n}\r\n\r\nfunction smoothScrolling(link) {\r\n  const target = document.querySelector(link.getAttribute(\"href\"))\r\n  const targetPosition = target.offsetTop\r\n\r\n  window.scrollTo({\r\n    top: targetPosition,\r\n    behavior: \"smooth\",\r\n  })\r\n}\r\n\r\n// Ajout des écouteurs d'événements\r\nwindow.addEventListener(\"scroll\", setActiveNav)\r\nwindow.addEventListener(\"resize\", removeNavOpen)\r\nhamburger.addEventListener(\"click\", toggleHamburgerMenu)\r\n\r\nnavbarItems.forEach(item => {\r\n  item.addEventListener(\"click\", toggleHamburgerMenu)\r\n})\r\n\r\ntriggerBtn.addEventListener(\"click\", () => {\r\n  modal.style.display = \"block\"\r\n})\r\n\r\ncloseBtn.addEventListener(\"click\", () => {\r\n  modal.style.display = \"none\"\r\n})\r\n\r\nwindow.addEventListener(\"click\", event => {\r\n  setActiveNav()\r\n  if (event.target === modal) {\r\n    modal.style.display = \"none\"\r\n  }\r\n})\r\n\r\nnavbarLinks.forEach(link => {\r\n  link.addEventListener(\"click\", e => {\r\n    // Empêcher le comportement par défaut du lien (ne pas recharger la page)\r\n    e.preventDefault()\r\n    smoothScrolling(link)\r\n  })\r\n})\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}